events {
    worker_connections 1024;
}
http{
    server {
        listen 80;
        lua_code_cache off;

        location /test {
            content_by_lua_block {
                --ngx.say('hello')
                ngx.say(string.rep("hello", 1000))
                ngx.sleep(3)
                ngx.say('the world')
            }
        }

        location /test2 {
            content_by_lua_block {
                ngx.say('hello')
                ngx.flush() -- 显式的向客户端刷新响应输出
                ngx.sleep(3)
                ngx.say('the world')
            }
        }

        location /test3 {
            content_by_lua_block {
                -- ngx.var.lime_rate = 1024 * 1024
                local file, err = io.open(ngx.config.prefix() .. 'data.db', 'r')
                if not file then 
                    ngx.log(ngx.ERR, 'open file error:', err)
                    ngx.exit(ngx.HTTP_SERVICE_UNAVAILABLE)
                end

                local data
                while true do
                    data = file:read(1024)
                    if nil == data then
                        break
                    end
                    ngx.print(data)
                    ngx.flush(true)
                end
                file:close()
            }
        }
    }
}